{
  "code": "import { Shader } from \"../../Shader\";\r\nimport { Shader2X } from \"../Shader2X\";\r\nimport { ShaderDefines2D } from \"../ShaderDefines2D\";\r\nimport { RenderState2D } from \"../../../utils/RenderState2D\";\r\nimport { ILaya } from \"../../../../../ILaya\";\r\nexport class Value2D {\r\n    constructor(mainID, subID) {\r\n        this.defines = new ShaderDefines2D();\r\n        this.size = [0, 0];\r\n        this.alpha = 1.0;\r\n        this.ALPHA = 1.0;\r\n        this.subID = 0;\r\n        this.ref = 1;\r\n        this._cacheID = 0;\r\n        this.clipMatDir = [ILaya.Context._MAXSIZE, 0, 0, ILaya.Context._MAXSIZE];\r\n        this.clipMatPos = [0, 0];\r\n        this.clipOff = [0, 0];\r\n        this.mainID = mainID;\r\n        this.subID = subID;\r\n        this.textureHost = null;\r\n        this.texture = null;\r\n        this.color = null;\r\n        this.colorAdd = null;\r\n        this.u_mmat2 = null;\r\n        this._cacheID = mainID | subID;\r\n        this._inClassCache = Value2D._cache[this._cacheID];\r\n        if (mainID > 0 && !this._inClassCache) {\r\n            this._inClassCache = Value2D._cache[this._cacheID] = [];\r\n            this._inClassCache._length = 0;\r\n        }\r\n        this.clear();\r\n    }\r\n    static _initone(type, classT) {\r\n        Value2D._typeClass[type] = classT;\r\n        Value2D._cache[type] = [];\r\n        Value2D._cache[type]._length = 0;\r\n    }\r\n    static __init__() {\r\n    }\r\n    setValue(value) { }\r\n    _ShaderWithCompile() {\r\n        var ret = Shader.withCompile2D(0, this.mainID, this.defines.toNameDic(), this.mainID | this.defines._value, Shader2X.create, this._attribLocation);\r\n        return ret;\r\n    }\r\n    upload() {\r\n        var renderstate2d = RenderState2D;\r\n        RenderState2D.worldMatrix4 === RenderState2D.TEMPMAT4_ARRAY || this.defines.addInt(ShaderDefines2D.WORLDMAT);\r\n        this.mmat = renderstate2d.worldMatrix4;\r\n        if (RenderState2D.matWVP) {\r\n            this.defines.addInt(ShaderDefines2D.MVP3D);\r\n            this.u_MvpMatrix = RenderState2D.matWVP.elements;\r\n        }\r\n        var sd = Shader.sharders[this.mainID | this.defines._value] || this._ShaderWithCompile();\r\n        if (sd._shaderValueWidth !== renderstate2d.width || sd._shaderValueHeight !== renderstate2d.height) {\r\n            this.size[0] = renderstate2d.width;\r\n            this.size[1] = renderstate2d.height;\r\n            sd._shaderValueWidth = renderstate2d.width;\r\n            sd._shaderValueHeight = renderstate2d.height;\r\n            sd.upload(this, null);\r\n        }\r\n        else {\r\n            sd.upload(this, sd._params2dQuick2 || sd._make2dQuick2());\r\n        }\r\n    }\r\n    setFilters(value) {\r\n        this.filters = value;\r\n        if (!value)\r\n            return;\r\n        var n = value.length, f;\r\n        for (var i = 0; i < n; i++) {\r\n            f = value[i];\r\n            if (f) {\r\n                this.defines.add(f.type);\r\n                f.action.setValue(this);\r\n            }\r\n        }\r\n    }\r\n    clear() {\r\n        this.defines._value = this.subID + (ILaya.WebGL.shaderHighPrecision ? ShaderDefines2D.SHADERDEFINE_FSHIGHPRECISION : 0);\r\n        this.clipOff[0] = 0;\r\n    }\r\n    release() {\r\n        if ((--this.ref) < 1) {\r\n            this._inClassCache && (this._inClassCache[this._inClassCache._length++] = this);\r\n            this.clear();\r\n            this.filters = null;\r\n            this.ref = 1;\r\n            this.clipOff[0] = 0;\r\n        }\r\n    }\r\n    static create(mainType, subType) {\r\n        var types = Value2D._cache[mainType | subType];\r\n        if (types._length)\r\n            return types[--types._length];\r\n        else\r\n            return new Value2D._typeClass[mainType | subType](subType);\r\n    }\r\n}\r\nValue2D._cache = [];\r\nValue2D._typeClass = [];\r\nValue2D.TEMPMAT4_ARRAY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\r\n",
  "references": [
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/resource/Texture.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/webgl/shader/Shader.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/webgl/shader/ShaderValue.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/webgl/shader/d2/Shader2D.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/webgl/shader/d2/Shader2X.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/webgl/shader/d2/ShaderDefines2D.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/webgl/utils/RenderState2D.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/ILaya.ts"
  ]
}
