{
  "code": "export class FontInfo {\r\n    constructor(font) {\r\n        this._font = \"14px Arial\";\r\n        this._family = \"Arial\";\r\n        this._size = 14;\r\n        this._italic = false;\r\n        this._bold = false;\r\n        this._id = FontInfo._gfontID++;\r\n        this.setFont(font || this._font);\r\n    }\r\n    static Parse(font) {\r\n        if (font === FontInfo._lastFont) {\r\n            return FontInfo._lastFontInfo;\r\n        }\r\n        var r = FontInfo._cache[font];\r\n        if (!r) {\r\n            r = FontInfo._cache[font] = new FontInfo(font);\r\n        }\r\n        FontInfo._lastFont = font;\r\n        FontInfo._lastFontInfo = r;\r\n        return r;\r\n    }\r\n    setFont(value) {\r\n        this._font = value;\r\n        var _words = value.split(' ');\r\n        var l = _words.length;\r\n        if (l < 2) {\r\n            if (l == 1) {\r\n                if (_words[0].indexOf('px') > 0) {\r\n                    this._size = parseInt(_words[0]);\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        var szpos = -1;\r\n        for (var i = 0; i < l; i++) {\r\n            if (_words[i].indexOf('px') > 0 || _words[i].indexOf('pt') > 0) {\r\n                szpos = i;\r\n                this._size = parseInt(_words[i]);\r\n                if (this._size <= 0) {\r\n                    console.error('font parse error:' + value);\r\n                    this._size = 14;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        var fpos = szpos + 1;\r\n        var familys = _words[fpos];\r\n        fpos++;\r\n        for (; fpos < l; fpos++) {\r\n            familys += ' ' + _words[fpos];\r\n        }\r\n        this._family = (familys.split(','))[0];\r\n        this._italic = _words.indexOf('italic') >= 0;\r\n        this._bold = _words.indexOf('bold') >= 0;\r\n    }\r\n}\r\nFontInfo.EMPTY = new FontInfo(null);\r\nFontInfo._cache = {};\r\nFontInfo._gfontID = 0;\r\nFontInfo._lastFont = '';\r\n",
  "references": []
}
