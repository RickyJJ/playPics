{
  "code": "import { Laya } from \"../../Laya\";\r\nimport { Component } from \"../components/Component\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nimport { IPhysics } from \"./IPhysics\";\r\nexport class ColliderBase extends Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this._isSensor = false;\r\n        this._density = 10;\r\n        this._friction = 0.2;\r\n        this._restitution = 0;\r\n    }\r\n    getDef() {\r\n        if (!this._def) {\r\n            var def = new window.box2d.b2FixtureDef();\r\n            def.density = this.density;\r\n            def.friction = this.friction;\r\n            def.isSensor = this.isSensor;\r\n            def.restitution = this.restitution;\r\n            def.shape = this._shape;\r\n            this._def = def;\r\n        }\r\n        return this._def;\r\n    }\r\n    _onEnable() {\r\n        this.rigidBody || Laya.systemTimer.callLater(this, this._checkRigidBody);\r\n    }\r\n    _checkRigidBody() {\r\n        if (!this.rigidBody) {\r\n            var comp = this.owner.getComponent(IPhysics.RigidBody);\r\n            if (comp) {\r\n                this.rigidBody = comp;\r\n                this.refresh();\r\n            }\r\n        }\r\n    }\r\n    _onDestroy() {\r\n        if (this.rigidBody) {\r\n            if (this.fixture) {\r\n                if (this.fixture.GetBody() == this.rigidBody.body) {\r\n                    this.rigidBody.body.DestroyFixture(this.fixture);\r\n                }\r\n                this.fixture = null;\r\n            }\r\n            this.rigidBody = null;\r\n            this._shape = null;\r\n            this._def = null;\r\n        }\r\n    }\r\n    get isSensor() {\r\n        return this._isSensor;\r\n    }\r\n    set isSensor(value) {\r\n        this._isSensor = value;\r\n        if (this._def) {\r\n            this._def.isSensor = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n    get density() {\r\n        return this._density;\r\n    }\r\n    set density(value) {\r\n        this._density = value;\r\n        if (this._def) {\r\n            this._def.density = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n    get friction() {\r\n        return this._friction;\r\n    }\r\n    set friction(value) {\r\n        this._friction = value;\r\n        if (this._def) {\r\n            this._def.friction = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n    get restitution() {\r\n        return this._restitution;\r\n    }\r\n    set restitution(value) {\r\n        this._restitution = value;\r\n        if (this._def) {\r\n            this._def.restitution = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n    refresh() {\r\n        if (this.enabled && this.rigidBody) {\r\n            var body = this.rigidBody.body;\r\n            if (this.fixture) {\r\n                if (this.fixture.GetBody() == this.rigidBody.body) {\r\n                    this.rigidBody.body.DestroyFixture(this.fixture);\r\n                }\r\n                this.fixture.Destroy();\r\n                this.fixture = null;\r\n            }\r\n            var def = this.getDef();\r\n            def.filter.groupIndex = this.rigidBody.group;\r\n            def.filter.categoryBits = this.rigidBody.category;\r\n            def.filter.maskBits = this.rigidBody.mask;\r\n            this.fixture = body.CreateFixture(def);\r\n            this.fixture.collider = this;\r\n        }\r\n    }\r\n    resetShape(re = true) {\r\n    }\r\n    get isSingleton() {\r\n        return false;\r\n    }\r\n}\r\nClassUtils.regClass(\"laya.physics.ColliderBase\", ColliderBase);\r\nClassUtils.regClass(\"Laya.ColliderBase\", ColliderBase);\r\n",
  "references": [
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/Laya.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/components/Component.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/utils/ClassUtils.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/physics/IPhysics.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/physics/RigidBody.ts"
  ]
}
