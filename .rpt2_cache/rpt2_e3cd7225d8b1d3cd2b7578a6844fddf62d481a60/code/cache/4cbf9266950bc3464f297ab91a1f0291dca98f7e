{
  "code": "import { Pool } from \"../utils/Pool\";\r\nimport { Utils } from \"../utils/Utils\";\r\nexport class Component {\r\n    constructor() {\r\n        this._id = Utils.getGID();\r\n        this._resetComp();\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get enabled() {\r\n        return this._enabled;\r\n    }\r\n    set enabled(value) {\r\n        if (this._enabled != value) {\r\n            this._enabled = value;\r\n            if (this.owner) {\r\n                if (value)\r\n                    this.owner.activeInHierarchy && this._onEnable();\r\n                else\r\n                    this.owner.activeInHierarchy && this._onDisable();\r\n            }\r\n        }\r\n    }\r\n    get isSingleton() {\r\n        return true;\r\n    }\r\n    get destroyed() {\r\n        return this._destroyed;\r\n    }\r\n    _isScript() {\r\n        return false;\r\n    }\r\n    _resetComp() {\r\n        this._indexInList = -1;\r\n        this._enabled = true;\r\n        this._awaked = false;\r\n        this.owner = null;\r\n    }\r\n    _getIndexInList() {\r\n        return this._indexInList;\r\n    }\r\n    _setIndexInList(index) {\r\n        this._indexInList = index;\r\n    }\r\n    _onAdded() {\r\n    }\r\n    _onAwake() {\r\n    }\r\n    _onEnable() {\r\n    }\r\n    _onDisable() {\r\n    }\r\n    _onDestroy() {\r\n    }\r\n    onReset() {\r\n    }\r\n    _parse(data) {\r\n    }\r\n    _cloneTo(dest) {\r\n    }\r\n    _setActive(value) {\r\n        if (value) {\r\n            if (!this._awaked) {\r\n                this._awaked = true;\r\n                this._onAwake();\r\n            }\r\n            this._enabled && this._onEnable();\r\n        }\r\n        else {\r\n            this._enabled && this._onDisable();\r\n        }\r\n    }\r\n    destroy() {\r\n        if (this.owner)\r\n            this.owner._destroyComponent(this);\r\n    }\r\n    _destroy() {\r\n        if (this.owner.activeInHierarchy && this._enabled) {\r\n            this._setActive(false);\r\n            (this._isScript()) && (this.onDisable());\r\n        }\r\n        this._onDestroy();\r\n        this._destroyed = true;\r\n        if (this.onReset !== Component.prototype.onReset) {\r\n            this.onReset();\r\n            this._resetComp();\r\n            Pool.recoverByClass(this);\r\n        }\r\n        else {\r\n            this._resetComp();\r\n        }\r\n    }\r\n}\r\n",
  "references": [
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/display/Node.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/resource/IDestroy.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/resource/ISingletonElement.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/utils/Pool.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/utils/Utils.ts"
  ]
}
