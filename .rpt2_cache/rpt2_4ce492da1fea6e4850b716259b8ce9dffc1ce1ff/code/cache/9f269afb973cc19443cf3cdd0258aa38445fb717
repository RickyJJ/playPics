{
  "code": "import { ColorFilter } from \"../../filters/ColorFilter\";\r\nimport { ColorUtils } from \"../../utils/ColorUtils\";\r\nimport { Pool } from \"../../utils/Pool\";\r\nexport class DrawTrianglesCmd {\r\n    static create(texture, x, y, vertices, uvs, indices, matrix, alpha, color, blendMode, colorNum) {\r\n        var cmd = Pool.getItemByClass(\"DrawTrianglesCmd\", DrawTrianglesCmd);\r\n        cmd.texture = texture;\r\n        cmd.x = x;\r\n        cmd.y = y;\r\n        cmd.vertices = vertices;\r\n        cmd.uvs = uvs;\r\n        cmd.indices = indices;\r\n        cmd.matrix = matrix;\r\n        cmd.alpha = alpha;\r\n        if (color) {\r\n            cmd.color = new ColorFilter();\r\n            var c = ColorUtils.create(color).arrColor;\r\n            cmd.color.color(c[0] * 255, c[1] * 255, c[2] * 255, c[3] * 255);\r\n        }\r\n        cmd.blendMode = blendMode;\r\n        cmd.colorNum = colorNum;\r\n        return cmd;\r\n    }\r\n    recover() {\r\n        this.texture = null;\r\n        this.vertices = null;\r\n        this.uvs = null;\r\n        this.indices = null;\r\n        this.matrix = null;\r\n        Pool.recover(\"DrawTrianglesCmd\", this);\r\n    }\r\n    run(context, gx, gy) {\r\n        context.drawTriangles(this.texture, this.x + gx, this.y + gy, this.vertices, this.uvs, this.indices, this.matrix, this.alpha, this.color, this.blendMode, this.colorNum);\r\n    }\r\n    get cmdID() {\r\n        return DrawTrianglesCmd.ID;\r\n    }\r\n}\r\nDrawTrianglesCmd.ID = \"DrawTriangles\";\r\n",
  "references": [
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/filters/ColorFilter.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/maths/Matrix.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/resource/Context.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/resource/Texture.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/utils/ColorUtils.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/utils/Pool.ts"
  ]
}
