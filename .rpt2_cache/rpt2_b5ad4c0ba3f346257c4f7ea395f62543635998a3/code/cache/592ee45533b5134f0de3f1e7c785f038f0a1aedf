{
  "code": "import { ILaya } from \"../../ILaya\";\r\nimport { LayaGL } from \"../layagl/LayaGL\";\r\nexport class WebGLContext {\r\n    static __init__() {\r\n        var gl = LayaGL.instance;\r\n        WebGLContext._depthFunc = gl.LESS;\r\n        WebGLContext._blendEquation = gl.FUNC_ADD;\r\n        WebGLContext._blendEquationRGB = gl.FUNC_ADD;\r\n        WebGLContext._blendEquationAlpha = gl.FUNC_ADD;\r\n        WebGLContext._sFactor = gl.ONE;\r\n        WebGLContext._dFactor = gl.ZERO;\r\n        WebGLContext._sFactorAlpha = gl.ONE;\r\n        WebGLContext._dFactorAlpha = gl.ZERO;\r\n        WebGLContext._activedTextureID = gl.TEXTURE0;\r\n        WebGLContext._glTextureIDs = [gl.TEXTURE0, gl.TEXTURE1, gl.TEXTURE2, gl.TEXTURE3, gl.TEXTURE4, gl.TEXTURE5, gl.TEXTURE6, gl.TEXTURE7];\r\n    }\r\n    static useProgram(gl, program) {\r\n        if (WebGLContext._useProgram === program)\r\n            return false;\r\n        gl.useProgram(program);\r\n        WebGLContext._useProgram = program;\r\n        return true;\r\n    }\r\n    static setDepthTest(gl, value) {\r\n        value !== WebGLContext._depthTest && (WebGLContext._depthTest = value, value ? gl.enable(gl.DEPTH_TEST) : gl.disable(gl.DEPTH_TEST));\r\n    }\r\n    static setDepthMask(gl, value) {\r\n        value !== WebGLContext._depthMask && (WebGLContext._depthMask = value, gl.depthMask(value));\r\n    }\r\n    static setDepthFunc(gl, value) {\r\n        value !== WebGLContext._depthFunc && (WebGLContext._depthFunc = value, gl.depthFunc(value));\r\n    }\r\n    static setBlend(gl, value) {\r\n        value !== WebGLContext._blend && (WebGLContext._blend = value, value ? gl.enable(gl.BLEND) : gl.disable(gl.BLEND));\r\n    }\r\n    static setBlendEquation(gl, blendEquation) {\r\n        if (blendEquation !== WebGLContext._blendEquation) {\r\n            WebGLContext._blendEquation = blendEquation;\r\n            WebGLContext._blendEquationRGB = WebGLContext._blendEquationAlpha = null;\r\n            gl.blendEquation(blendEquation);\r\n        }\r\n    }\r\n    static setBlendEquationSeparate(gl, blendEquationRGB, blendEquationAlpha) {\r\n        if (blendEquationRGB !== WebGLContext._blendEquationRGB || blendEquationAlpha !== WebGLContext._blendEquationAlpha) {\r\n            WebGLContext._blendEquationRGB = blendEquationRGB;\r\n            WebGLContext._blendEquationAlpha = blendEquationAlpha;\r\n            WebGLContext._blendEquation = null;\r\n            gl.blendEquationSeparate(blendEquationRGB, blendEquationAlpha);\r\n        }\r\n    }\r\n    static setBlendFunc(gl, sFactor, dFactor) {\r\n        if (sFactor !== WebGLContext._sFactor || dFactor !== WebGLContext._dFactor) {\r\n            WebGLContext._sFactor = sFactor;\r\n            WebGLContext._dFactor = dFactor;\r\n            WebGLContext._sFactorRGB = null;\r\n            WebGLContext._dFactorRGB = null;\r\n            WebGLContext._sFactorAlpha = null;\r\n            WebGLContext._dFactorAlpha = null;\r\n            gl.blendFunc(sFactor, dFactor);\r\n        }\r\n    }\r\n    static setBlendFuncSeperate(gl, srcRGB, dstRGB, srcAlpha, dstAlpha) {\r\n        if (srcRGB !== WebGLContext._sFactorRGB || dstRGB !== WebGLContext._dFactorRGB || srcAlpha !== WebGLContext._sFactorAlpha || dstAlpha !== WebGLContext._dFactorAlpha) {\r\n            WebGLContext._sFactorRGB = srcRGB;\r\n            WebGLContext._dFactorRGB = dstRGB;\r\n            WebGLContext._sFactorAlpha = srcAlpha;\r\n            WebGLContext._dFactorAlpha = dstAlpha;\r\n            WebGLContext._sFactor = null;\r\n            WebGLContext._dFactor = null;\r\n            gl.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n        }\r\n    }\r\n    static setCullFace(gl, value) {\r\n        value !== WebGLContext._cullFace && (WebGLContext._cullFace = value, value ? gl.enable(gl.CULL_FACE) : gl.disable(gl.CULL_FACE));\r\n    }\r\n    static setFrontFace(gl, value) {\r\n        value !== WebGLContext._frontFace && (WebGLContext._frontFace = value, gl.frontFace(value));\r\n    }\r\n    static activeTexture(gl, textureID) {\r\n        if (WebGLContext._activedTextureID !== textureID) {\r\n            gl.activeTexture(textureID);\r\n            WebGLContext._activedTextureID = textureID;\r\n        }\r\n    }\r\n    static bindTexture(gl, target, texture) {\r\n        if (WebGLContext._activeTextures[WebGLContext._activedTextureID - gl.TEXTURE0] !== texture) {\r\n            gl.bindTexture(target, texture);\r\n            WebGLContext._activeTextures[WebGLContext._activedTextureID - gl.TEXTURE0] = texture;\r\n        }\r\n    }\r\n    static __init_native() {\r\n        if (!ILaya.Render.supportWebGLPlusRendering)\r\n            return;\r\n        var webGLContext = WebGLContext;\r\n        webGLContext.activeTexture = webGLContext.activeTextureForNative;\r\n        webGLContext.bindTexture = webGLContext.bindTextureForNative;\r\n    }\r\n    static useProgramForNative(gl, program) {\r\n        gl.useProgram(program);\r\n        return true;\r\n    }\r\n    static setDepthTestForNative(gl, value) {\r\n        if (value)\r\n            gl.enable(gl.DEPTH_TEST);\r\n        else\r\n            gl.disable(gl.DEPTH_TEST);\r\n    }\r\n    static setDepthMaskForNative(gl, value) {\r\n        gl.depthMask(value);\r\n    }\r\n    static setDepthFuncForNative(gl, value) {\r\n        gl.depthFunc(value);\r\n    }\r\n    static setBlendForNative(gl, value) {\r\n        if (value)\r\n            gl.enable(gl.BLEND);\r\n        else\r\n            gl.disable(gl.BLEND);\r\n    }\r\n    static setBlendFuncForNative(gl, sFactor, dFactor) {\r\n        gl.blendFunc(sFactor, dFactor);\r\n    }\r\n    static setCullFaceForNative(gl, value) {\r\n        if (value)\r\n            gl.enable(gl.CULL_FACE);\r\n        else\r\n            gl.disable(gl.CULL_FACE);\r\n    }\r\n    static setFrontFaceForNative(gl, value) {\r\n        gl.frontFace(value);\r\n    }\r\n    static activeTextureForNative(gl, textureID) {\r\n        gl.activeTexture(textureID);\r\n    }\r\n    static bindTextureForNative(gl, target, texture) {\r\n        gl.bindTexture(target, texture);\r\n    }\r\n    static bindVertexArrayForNative(gl, vertexArray) {\r\n        gl.bindVertexArray(vertexArray);\r\n    }\r\n}\r\nWebGLContext._activeTextures = new Array(8);\r\nWebGLContext._useProgram = null;\r\nWebGLContext._depthTest = true;\r\nWebGLContext._depthMask = true;\r\nWebGLContext._blend = false;\r\nWebGLContext._cullFace = false;\r\nWebGLContext.mainContext = null;\r\n",
  "references": [
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/ILaya.ts",
    "D:/MySpace/Projects/NextPresent/PresentNext/libs/laya/layagl/LayaGL.ts"
  ]
}
